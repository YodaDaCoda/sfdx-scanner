name: run-tests
on:
  workflow_call:
    inputs:
      node-matrix:
        description: "An array of node versions against which the tests should be run"
        required: false
        type: string
        default: "[{version: 'lts/*', artifact: 'lts'}]"
      target-branch:
        description: "What branch should be checked out?"
        required: false
        type: string
        # If no target branch is specified, just use the one we'd use normally.
        default: ${{ github.sha }}

jobs:
  unit-tests:
    strategy:
      # By default, if any job in a matrix fails, all other jobs are immediately canceled. This makes the jobs run
      # to completion instead.
      fail-fast: false
      matrix:
        node: ${{ fromJson(inputs.node-matrix) }}
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Check out the code
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.target-branch }}
      # Make sure we're on the right version on Node
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node.version }}
      - run: yarn
      - run: yarn build
      - run: yarn test
        id: jest-tests
      - run: yarn lint
      - if: ${{ failure() && steps.jest-tests.outcome != 'success' }}
        # Use bash for this to avoid any syntax nonsense
        shell: bash
        run: |
          MSG="Jest tests failed. If no annotations were added, the most likely problem is insufficient code coverage."
          echo "::error ::$MSG"
      - name: Upload full artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: tests-${{ runner.os }}-${{ matrix.node.artifact }}
          path: |
            ./reports
            ./coverage
